{"version":3,"file":"static/js/856.25a66540.chunk.js","mappings":"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","sources":["Component/AdminDashbord/EmptyData.jsx","Component/CustomButton/CustomBTN.jsx","Component/MarketplaceCard/Likeviewstyle.js","Component/MarketplaceCard/LikeView.jsx","Component/MarketplaceCard/MarketplaceCard.jsx","Component/Paginations/Paginations.jsx","Component/userDashbord/profile/allproducts.jsx","Component/userDashbord/profile/favoriteList.js","Component/userDashbord/profile/followList.js","Component/userDashbord/profile/profileTabs.jsx","Component/userDashbord/user.jsx","hooks/makeToast.js"],"sourcesContent":["import { Box, Paper, Typography } from \"@mui/material\";\r\nimport React from \"react\";\r\nexport const EmptyData = ({ text }) => {\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={(theme) => ({\r\n          mx: \"auto\",\r\n          mt: 5,\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          justifyContent: \"center\",\r\n          width: \"100%\",\r\n          backgroundColor:\r\n            theme.palette.mode === \"light\" ? \"#F4F4F4\" : \"#3A3A3A\",\r\n          height: \"300px\",\r\n          borderRadius: \"10px\",\r\n      \r\n        })}\r\n      >\r\n        <Typography\r\n          textAlign=\"center\"\r\n          sx={{ fontSize: { xs: \"20px\", md: \"40px \", fontWeight: \"bold\" } }}\r\n        >\r\n          {text}\r\n        </Typography>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nfunction CustomBTN(props) {\r\n  return (\r\n    <Button\r\n      sx={{\r\n        py: 1,\r\n        fontSize: { xs: \"12px\", md: \"15px\" },\r\n        width: \"100%\",\r\n        marginTop: \"10px\",\r\n        borderRadius: \"10px\",\r\n        background:\r\n            \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n        color: \"white\",\r\n        fontWeight: 700,\r\n      }}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default CustomBTN;\r\n","export const iconStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\",\r\n  alignItems: \"center\",\r\n  width: \"25%\",\r\n  color: \"lightgray\",\r\n};\r\n","import React from \"react\";\r\nimport { iconStyle } from \"../MarketplaceCard/Likeviewstyle\";\r\nimport { Box, Stack, Typography } from \"@mui/material\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport FavoriteIcon from \"@mui/icons-material/Favorite\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nfunction LikeView({ userlikeviews, howManyViews }) {\r\n  let like = userlikeviews?.likesList?.length;\r\n  let view = userlikeviews?.favoritesList?.length;\r\n  let views = howManyViews?.length;\r\n  return (\r\n    <Box\r\n      sx={{\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n        alignItems: \"center\",\r\n        my: 1,\r\n      }}\r\n    >\r\n      <Box sx={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n        <Stack spacing={1} direction=\"row\">\r\n          <Box style={iconStyle}>\r\n            <ThumbUpIcon fontSize=\"small\" />\r\n            <Typography fontSize=\"small\" sx={{ ml: 0.5 }}>\r\n              {like > 0 ? like : 0}\r\n            </Typography>\r\n          </Box>\r\n          <Box style={iconStyle}>\r\n            <FavoriteIcon fontSize=\"small\" sx={{ ml: 1 }} />\r\n            <Typography fontSize=\"small\" sx={{ ml: 0.5 }}>\r\n              {\" \"}\r\n              {view ? view : 0}\r\n            </Typography>\r\n          </Box>\r\n\r\n          {/* <Box style={iconStyle}>\r\n            <VisibilityIcon fontSize=\"small\" sx={{ ml: 1 }} />\r\n            <Typography fontSize=\"small\" sx={{ ml: 0.5 }}>\r\n              {views ? views : 0}\r\n            </Typography>\r\n          </Box> */}\r\n        </Stack>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default LikeView;\r\n","import {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport IosShareIcon from \"@mui/icons-material/IosShare\";\r\nimport HighlightAltIcon from \"@mui/icons-material/HighlightAlt\";\r\nimport MyLocationIcon from \"@mui/icons-material/MyLocation\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { URL } from \"../../URL\";\r\nimport CustomBTN from \"../CustomButton/CustomBTN\";\r\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\";\r\nimport LikeView from \"./LikeView\";\r\nimport axios from \"axios\";\r\nimport Loading from \"../../Loading/Loading\";\r\nimport { AddCeil, AddfailNfts } from \"../../Redux/Reducer\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport bloctech from \"../../images/bloctech.jpg\";\r\nimport useMakeToast from \"../../hooks/makeToast\";\r\nfunction MarketplaceCard(props) {\r\n  const makeToast = useMakeToast();\r\n  const dispatch = useDispatch();\r\n  const [open, setOpen] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n  const handleOpen = (_id) => {\r\n    setOpen(true);\r\n  };\r\n  const { ceilSlice } = useSelector((state) => state);\r\n  const { userdetails } = ceilSlice;\r\n  const filterRole =\r\n    userdetails.role && userdetails?.role.filter((role) => role !== null);\r\n  const videoType = [\"mov\", \"mp4\", \"avi\", \"wmf\", \"flv\", \"webm\"];\r\n  const {\r\n    address,\r\n    locations,\r\n    id,\r\n    name,\r\n    filelink,\r\n    Image,\r\n    file,\r\n    user,\r\n    productTotalPrice,\r\n    userlikeviews,\r\n    howManyViews,\r\n    paidStatusContract,\r\n    failedNftmint,\r\n  } = props;\r\n  const result = file?.split(\".\");\r\n  let fileType = result?.pop();\r\n  const mintFaildNFT = async (_id, address) => {\r\n    try {\r\n      setLoading(true);\r\n      let mintNft = { _id, address };\r\n      const { data } = await axios.post(`${URL}/mintfailedNft`, mintNft);\r\n      if (data?.data === true) {\r\n        dispatch(AddCeil(data?.nftes?.nfts));\r\n        dispatch(AddfailNfts(data?.nftes?.failedNfts));\r\n        makeToast(`${data?.message}`, \"success\", 3, \"Success\");\r\n        failedNftmint(true);\r\n      }\r\n      data?.data === false &&\r\n        makeToast(`${data?.message}`, \"error\", 3, \"Failed\");\r\n      setLoading(false);\r\n    } catch (error) {\r\n      console.log(\"Nft mint failed error \");\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {loading && <Loading loading={Loading} />}\r\n      <Card\r\n        sx={{\r\n          backgroundColor: \"background.secondary\",\r\n          borderRadius: \"16px\",\r\n          p: 1.5,\r\n          boxShadow: \"0px 0px 10px rgba(0, 0, 0, 0.25)\",\r\n          width: \"100% !important\",\r\n          maxWidth: \"340px !important\",\r\n        }}\r\n      >\r\n        <Box sx={{ position: \"relative\", minHeight: \"200px\" }}>\r\n          {!videoType?.includes(fileType) ? (\r\n            <Box\r\n              sx={(theme) => ({\r\n                boxShadow: \"inset 0px 4px 34px #60BFEE\",\r\n                backgroundImage:\r\n                  file || filelink\r\n                    ? `url(${URL}/upload/${file})` || `url(${filelink})`\r\n                    : Image\r\n                    ? `url(${URL}/upload/${Image})`\r\n                    : `url(${bloctech})`,\r\n\r\n                backgroundPosition: \"center\",\r\n                backgroundSize: \"cover\",\r\n                height: \"200px\",\r\n                width: \"100%\",\r\n                borderRadius: \"10px\",\r\n              })}\r\n            ></Box>\r\n          ) : (\r\n            <>\r\n              {videoType?.includes(fileType) ? (\r\n                <Box\r\n                  sx={{\r\n                    borderRadius: \"10px 10px 0px 0px\",\r\n                    overflow: \"hidden\",\r\n                    width: \"100%\",\r\n                    height: \"200px\",\r\n                    borderRadius: \"10px\",\r\n                  }}\r\n                >\r\n                  <video\r\n                    src={`${URL}/upload/${file}`}\r\n                    width=\"100%\"\r\n                    margin=\"0px\"\r\n                    controls=\"controls\"\r\n                    autoPlay={false}\r\n                    style={{ minHeight: \"200px\", borderRadius: \"10px\" }}\r\n                  />\r\n                </Box>\r\n              ) : null}\r\n            </>\r\n          )}\r\n        </Box>\r\n        <Box sx={{ py: 1 }}>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography\r\n              gutterBottom\r\n              sx={{\r\n                maxWidth: \"250px\",\r\n                textOverflow: \"ellipsis\",\r\n                fontSize: \"15px\",\r\n                fontWeight: \"bold\",\r\n              }}\r\n              component=\"h2\"\r\n            >\r\n              {/* {name} */}\r\n              {name ? name.slice(0, 13) + \"...\" : \" Land Nft\"}\r\n            </Typography>\r\n            <LikeView\r\n              userlikeviews={userlikeviews}\r\n              howManyViews={howManyViews}\r\n            />\r\n          </Box>\r\n\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n            }}\r\n          >\r\n            <Typography sx={{ fontSize: \"15px\" }}> Price</Typography>\r\n            <Typography\r\n              sx={{\r\n                fontSize: \"15px\",\r\n                backgroundColor: \"background.buttonBg\",\r\n                px: 1,\r\n                py: \"5px\",\r\n                borderRadius: \"7px\",\r\n              }}\r\n            >\r\n              {productTotalPrice ? +\" \" + productTotalPrice + \"$\" : \" 0\"}\r\n            </Typography>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"centers\",\r\n            }}\r\n          >\r\n            <Typography\r\n              component=\"p\"\r\n              sx={{ fontSize: \"1rem\", fontWeight: 700 }}\r\n            >\r\n              status\r\n            </Typography>\r\n            <Box>\r\n              <Typography\r\n                color={paidStatusContract ? \"green\" : \"red\"}\r\n                component=\"p\"\r\n                sx={{\r\n                  fontSize: \"12px\",\r\n                  ml: 1,\r\n                  mt: 1,\r\n                  fontWeight: 700,\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {paidStatusContract ? \"Mint succes\" : \"pending\"}\r\n              </Typography>\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"space-between\",\r\n              alignItems: \"center\",\r\n              my: 1,\r\n            }}\r\n          >\r\n            <Typography sx={{ fontSize: \"15px\" }}> Location</Typography>\r\n            <Box\r\n              sx={{\r\n                zIndex: 1,\r\n\r\n                cursor: \"pointer\",\r\n              }}\r\n            >\r\n              <Link\r\n                to={`/Bmap/${locations?.lang}/${locations?.long}`}\r\n                style={{ color: \"white\" }}\r\n              >\r\n                <MyLocationIcon\r\n                  sx={{\r\n                    fontSize: \"35px\",\r\n                    backgroundColor: \"#3ACAB8\",\r\n                    opacity: \"\",\r\n                    padding: \"8px\",\r\n                    borderRadius: \"10px\",\r\n                  }}\r\n                />\r\n              </Link>\r\n            </Box>\r\n          </Box>\r\n\r\n          <Link to={`/nftDetail/${id}`} style={{ textDecoration: \"none\" }}>\r\n            <Box sx={{ width: \"100%\", display: \"flex\", alignItems: \"center\" }}>\r\n              <Button\r\n                sx={{\r\n                  clipPath:\r\n                    \"polygon(5% 0, 100% 0, 100% 90%, 95% 100%, 0 100%, 0 15%)\",\r\n                  background:\r\n                    \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n                  fontFamily: \"'Poppins'\",\r\n                  fontWeight: 700,\r\n                  fontSize: \"12px\",\r\n                  py: 2,\r\n                  px: 3,\r\n\r\n                  color: \"black\",\r\n                  width: \"70%\",\r\n\r\n                  mx: \"auto\",\r\n                }}\r\n              >\r\n                View Details\r\n              </Button>\r\n            </Box>\r\n          </Link>\r\n        </Box>\r\n      </Card>\r\n    </>\r\n  );\r\n}\r\nexport default MarketplaceCard;\r\n","import React from \"react\";\r\nimport { Stack } from \"@mui/system\";\r\nimport { Box, Button } from \"@mui/material\";\r\nimport ChevronLeftIcon from \"@mui/icons-material/ChevronLeft\";\r\nimport NavigateNextIcon from \"@mui/icons-material/NavigateNext\";\r\nimport { NavLink } from \"react-router-dom\";\r\nfunction Paginations({\r\n  PreviousButton,\r\n  paginationsHandles,\r\n  NextButton,\r\n  menuItems,\r\n  page,\r\n  totalPages,\r\n}) {\r\n  const styledactivelink = ({ isActive }) => {\r\n    return {\r\n      textDecoration: isActive ? \"underline\" : \"none\",\r\n    };\r\n  };\r\n  return (\r\n    <Box sx={{ m: 1, mb: 2 }}>\r\n      <Stack direction={\"row\"} alignItems=\"right\" justifyContent=\"center\">\r\n        {page === 1 ? (\r\n          <Button\r\n            startIcon={<ChevronLeftIcon />}\r\n            sx={{\r\n              width: \"20px\",\r\n              background:\r\n                \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                background:\r\n                  \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              },\r\n            }}\r\n            disabled\r\n          />\r\n        ) : (\r\n          <Button\r\n            onClick={() => {\r\n              PreviousButton();\r\n            }}\r\n            startIcon={<ChevronLeftIcon />}\r\n            sx={{\r\n              cursor: \"pointer\",\r\n              width: \"20px\",\r\n              background:\r\n                \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                background:\r\n                  \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n\r\n        {menuItems?.length > 0 &&\r\n          menuItems.map((items, index) => {\r\n            return (\r\n              <>\r\n                {index < 5 ? (\r\n                  <Button\r\n                    sx={{ cursor: \"pointer\" }}\r\n                    component={NavLink}\r\n                    to=\"#\"\r\n                    // style={styledactivelink}\r\n                    key={index + 1}\r\n                    onClick={() => {\r\n                      paginationsHandles(index + 1);\r\n                    }}\r\n                  >\r\n                    {index + 1}\r\n                  </Button>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </>\r\n            );\r\n          })}\r\n        {page !== totalPages ? (\r\n          <Button\r\n            // component={<NavLink />}\r\n            to=\"#\"\r\n            onClick={() => {\r\n              NextButton();\r\n            }}\r\n            startIcon={<NavigateNextIcon />}\r\n            sx={{\r\n              cursor: \"pointer\",\r\n              width: \"20px\",\r\n              background:\r\n                \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                background:\r\n                  \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              },\r\n            }}\r\n          />\r\n        ) : (\r\n          <Button\r\n            startIcon={<NavigateNextIcon />}\r\n            sx={{\r\n              width: \"20px\",\r\n              background:\r\n                \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              color: \"white\",\r\n              \"&:hover\": {\r\n                background:\r\n                  \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n              },\r\n            }}\r\n            disabled\r\n          />\r\n        )}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default Paginations;\r\n","import * as React from \"react\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Grid } from \"@mui/material\";\r\nimport { useSelector } from \"react-redux\";\r\nimport MarketplaceCard from \"../../MarketplaceCard/MarketplaceCard\";\r\nimport { EmptyData } from \"../../AdminDashbord/EmptyData\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport {\r\n  allNftsOfUser,\r\n} from \"../../../Api/api\";\r\nimport Loading from \"../../../Loading/Loading\";\r\nimport Paginations from \"../../Paginations/Paginations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AdduserNfts } from \"../../../Redux/Reducer\";\r\nimport axios from \"axios\";\r\nexport default function AllProducts({\r\n  Nfts,\r\n  AllNfts,\r\n  faildNFT,\r\n  favourite,\r\n  follow,\r\n}) {\r\n  let dispatch = useDispatch();\r\n  const [totalPage, setTotalPage] = useState(0);\r\n  const [currentPage, setCurrentPage] = useState();\r\n  const [page, setPage] = React.useState(1);\r\n  const [loading, setLoading] = useState(false);\r\n  const [Nftsrecord, setRecord] = useState([]);\r\n  const { ceilSlice } = useSelector((state) => state);\r\n  const { userNfts, ceildetails, failsNfts, userdetails } = ceilSlice;\r\n  const [nftmint, setNftmint] = useState(false);\r\n  const [hasMore, setHasMore] = useState(false);\r\n  const [itemList, setItemList] = useState([]);\r\n  const observer = useRef();\r\n  let lenOFceil = 0;\r\n  const checker = true;\r\n  const callApi = async () => {\r\n    setLoading(true);\r\n    setHasMore(false);\r\n    const values = {\r\n      id: userdetails.id,\r\n      page,\r\n    };\r\n    let response = await allNftsOfUser(values);\r\n    if (response) {\r\n      let more = response.data.data.length > 0 ? true : false;\r\n      setHasMore(more);\r\n      setItemList((prev) => {\r\n        return [...prev, ...response.data.data];\r\n      });\r\n      setTimeout(() => setLoading(false), 500);\r\n    }\r\n  };\r\n  useEffect(() => { callApi() }, [page]);\r\n  const lastItemVisible = React.useCallback(\r\n    (node) => {\r\n      if (loading) return;\r\n      if (observer.current) observer.current.disconnect();\r\n      observer.current = new IntersectionObserver((entries) => {\r\n        if (entries[0].isIntersecting && hasMore) {\r\n          setPage((prev) => prev + 1);\r\n          setHasMore(false);\r\n        }\r\n      });\r\n      if (node) observer.current.observe(node);\r\n    },\r\n    [hasMore, loading]\r\n  );\r\n  return (\r\n    <>\r\n      {/* <Loading loading={loading} /> */}\r\n      <Box sx={{ width: \"100%\", mx: \"auto\" }}>\r\n        <Grid container my={2}>\r\n          {itemList?.length > lenOFceil ? (\r\n            itemList?.map(\r\n              (\r\n                {\r\n                  address,\r\n                  _id,\r\n                  name,\r\n                  lang,\r\n                  long,\r\n                  filelink,\r\n                  capturesImage,\r\n                  file,\r\n                  productTotalPrice,\r\n                  user,\r\n                  favoritesList,\r\n                  likesList,\r\n                  howManyViews,\r\n                  paidStatusContract,\r\n                },\r\n                index\r\n              ) => {\r\n                if (itemList.length == index + 1) {\r\n                  return (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={6}\r\n                        md={4}\r\n                        xl={3}\r\n                        p={2}\r\n                        key={index + _id}\r\n                        ref={lastItemVisible}\r\n                     \r\n                      >\r\n                        <MarketplaceCard\r\n                          address={address}\r\n                          locations={{ lang, long }}\r\n                          id={_id}\r\n                          name={name}\r\n                          Image={capturesImage}\r\n                          user={user}\r\n                          filelink={filelink}\r\n                          file={file}\r\n                          productTotalPrice={productTotalPrice}\r\n                          checker={checker}\r\n                          userlikeviews={{ likesList, favoritesList }}\r\n                          howManyViews={howManyViews}\r\n                          paidStatusContract={paidStatusContract}\r\n                          failedNftmint={setNftmint}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  );\r\n                } else {\r\n                  return (\r\n                    <>\r\n                      <Grid\r\n                        item\r\n                        xs={12}\r\n                        sm={6}\r\n                        md={4}\r\n                        xl={3}\r\n                        p={2}\r\n                        key={index + _id}\r\n                      \r\n                      >\r\n                        <MarketplaceCard\r\n                          address={address}\r\n                          locations={{ lang, long }}\r\n                          id={_id}\r\n                          name={name}\r\n                          Image={capturesImage}\r\n                          user={user}\r\n                          filelink={filelink}\r\n                          file={file}\r\n                          productTotalPrice={productTotalPrice}\r\n                          checker={checker}\r\n                          userlikeviews={{ likesList, favoritesList }}\r\n                          howManyViews={howManyViews}\r\n                          paidStatusContract={paidStatusContract}\r\n                          failedNftmint={setNftmint}\r\n                        />\r\n                      </Grid>\r\n                    </>\r\n                  );\r\n                }\r\n              }\r\n            )\r\n          ) : (\r\n            <EmptyData text=\" Empty  NFTs ....\" />\r\n          )}\r\n        </Grid>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport {\r\n    favoriteNftOfUser\r\n} from \"../../../Api/api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Grid } from \"@mui/material\";\r\nimport MarketplaceCard from \"../../MarketplaceCard/MarketplaceCard\";\r\nimport { EmptyData } from \"../../AdminDashbord/EmptyData\";\r\nimport Loading from \"../../../Loading/Loading\";\r\nimport Paginations from \"../../Paginations/Paginations\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { AdduserNfts } from \"../../../Redux/Reducer\";\r\nimport axios from \"axios\";\r\nconst FavoriteList = () => {\r\n    const { ceilSlice } = useSelector((state) => state);\r\n    const { userNfts, ceildetails, failsNfts, userdetails } = ceilSlice;\r\n    const [hasMore, setHasMore] = useState(false);\r\n    const [itemList, setItemList] = useState([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [nftmint, setNftmint] = useState(false);\r\n    const favObserver = useRef();\r\n    let lenOFceil = 0;\r\n    const checker = true;\r\n    const callApi = async () => {\r\n        setLoading(true);\r\n        setHasMore(false);\r\n        const values = {\r\n            id: userdetails.id,\r\n            page,\r\n        };\r\n        const response = await favoriteNftOfUser(values);\r\n        if (response) {\r\n            let more = response.data.data.length > 0 ? true : false;\r\n            setHasMore(more);\r\n            setItemList((prev) => {\r\n                return [...prev, ...response.data.data];\r\n            });\r\n            setTimeout(() => setLoading(false), 500);\r\n\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        callApi()\r\n    }, [page])\r\n    const favItemVisible = React.useCallback(\r\n        (node) => {\r\n            if (loading) return;\r\n            if (favObserver.current) favObserver.current.disconnect();\r\n            favObserver.current = new IntersectionObserver((entries) => {\r\n                if (entries[0].isIntersecting && hasMore) {\r\n                    setPage((prev) => prev + 1);\r\n                    setHasMore(false);\r\n                }\r\n            });\r\n            if (node) favObserver.current.observe(node);\r\n        },\r\n        [hasMore, loading]\r\n    );\r\n    return (\r\n        <>\r\n            <Loading loading={loading} />\r\n            <Box sx={{ width: \"100%\", mx: \"auto\" }}>\r\n                <Grid container my={2}>\r\n                    {itemList?.length > lenOFceil ? (\r\n                        itemList?.map(\r\n                            (\r\n                                {\r\n                                    address,\r\n                                    _id,\r\n                                    name,\r\n                                    lang,\r\n                                    long,\r\n                                    filelink,\r\n                                    capturesImage,\r\n                                    file,\r\n                                    productTotalPrice,\r\n                                    user,\r\n                                    favoritesList,\r\n                                    likesList,\r\n                                    howManyViews,\r\n                                    paidStatusContract,\r\n                                },\r\n                                index\r\n                            ) => {\r\n                                if (itemList.length == index + 1) {\r\n                                    return (\r\n                                        <>\r\n                                            <Grid\r\n                                                item\r\n                                                xs={12}\r\n                                                sm={6}\r\n                                                md={4}\r\n                                                xl={3}\r\n                                                p={2}\r\n                                                key={index + _id}\r\n                                                ref={favItemVisible}\r\n                                            >\r\n                                                <MarketplaceCard\r\n                                                    address={address}\r\n                                                    locations={{ lang, long }}\r\n                                                    id={_id}\r\n                                                    name={name}\r\n                                                    Image={capturesImage}\r\n                                                    user={user}\r\n                                                    filelink={filelink}\r\n                                                    file={file}\r\n                                                    productTotalPrice={productTotalPrice}\r\n                                                    checker={checker}\r\n                                                    userlikeviews={{ likesList, favoritesList }}\r\n                                                    howManyViews={howManyViews}\r\n                                                    paidStatusContract={paidStatusContract}\r\n                                                    failedNftmint={setNftmint}\r\n                                                />\r\n                                            </Grid>\r\n                                        </>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <>\r\n                                            <Grid\r\n                                                item\r\n                                                xs={12}\r\n                                                sm={6}\r\n                                                md={4}\r\n                                                xl={3}\r\n                                                p={2}\r\n                                                key={index + _id}\r\n                                            >\r\n                                                <MarketplaceCard\r\n                                                    address={address}\r\n                                                    locations={{ lang, long }}\r\n                                                    id={_id}\r\n                                                    name={name}\r\n                                                    Image={capturesImage}\r\n                                                    user={user}\r\n                                                    filelink={filelink}\r\n                                                    file={file}\r\n                                                    productTotalPrice={productTotalPrice}\r\n                                                    checker={checker}\r\n                                                    userlikeviews={{ likesList, favoritesList }}\r\n                                                    howManyViews={howManyViews}\r\n                                                    paidStatusContract={paidStatusContract}\r\n                                                    failedNftmint={setNftmint}\r\n                                                />\r\n                                            </Grid>\r\n                                        </>\r\n                                    );\r\n                                }\r\n                            }\r\n                        )\r\n                    ) : (\r\n                        <EmptyData text=\" Empty  NFTs ....\" />\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FavoriteList;","import React, { useEffect, useState, useRef } from 'react';\r\nimport { followNftOfUser } from \"../../../Api/api\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Grid } from \"@mui/material\";\r\nimport MarketplaceCard from \"../../MarketplaceCard/MarketplaceCard\";\r\nimport { EmptyData } from \"../../AdminDashbord/EmptyData\";\r\nimport Loading from \"../../../Loading/Loading\";\r\nimport Paginations from \"../../Paginations/Paginations\";\r\nimport { useDispatch } from \"react-redux\";\r\nconst FollowList = () => {\r\n    const { ceilSlice } = useSelector((state) => state);\r\n    const { userNfts, ceildetails, failsNfts, userdetails } = ceilSlice;\r\n    const [hasMore, setHasMore] = useState(false);\r\n    const [itemList, setItemList] = useState([]);\r\n    const [page, setPage] = React.useState(1);\r\n    const [loading, setLoading] = useState(false);\r\n    const [nftmint, setNftmint] = useState(false);\r\n    const followObserver = useRef();\r\n    let lenOFceil = 0;\r\n    const checker = true;\r\n    const callApi = async () => {\r\n        setLoading(true);\r\n        setHasMore(false);\r\n        const values = {\r\n            id: userdetails.id,\r\n            page,\r\n        };\r\n        const response = await followNftOfUser(values);\r\n        if (response) {\r\n            let more = response.data.data.length > 0 ? true : false;\r\n            setHasMore(more);\r\n            setItemList((prev) => {\r\n                return [...prev, ...response.data.data];\r\n            });\r\n\r\n            console.log('iteeeeeee,,,,,,, faaavvvv   ', itemList)\r\n            setTimeout(() => setLoading(false), 500);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        callApi()\r\n    }, [page])\r\n    const lastItemVisible = React.useCallback(\r\n        (node) => {\r\n            if (loading) return;\r\n            if (followObserver.current) followObserver.current.disconnect();\r\n            followObserver.current = new IntersectionObserver((entries) => {\r\n                console.log(\"follow observer logg fff\",hasMore)\r\n                if (entries[0].isIntersecting && hasMore) {\r\n                    setPage((prev) => prev + 1);\r\n                    setHasMore(false);\r\n                }\r\n            });\r\n            if (node) followObserver.current.observe(node);\r\n        },\r\n        [hasMore, loading]\r\n    );\r\n    return (\r\n        <>\r\n            <Loading loading={loading} />\r\n            <Box sx={{ width: \"100%\", mx: \"auto\" }}>\r\n                <Grid container my={2}>\r\n                    {itemList?.length > lenOFceil ? (\r\n                        itemList?.map(\r\n                            (\r\n                                {\r\n                                    address,\r\n                                    _id,\r\n                                    name,\r\n                                    lang,\r\n                                    long,\r\n                                    filelink,\r\n                                    capturesImage,\r\n                                    file,\r\n                                    productTotalPrice,\r\n                                    user,\r\n                                    favoritesList,\r\n                                    likesList,\r\n                                    howManyViews,\r\n                                    paidStatusContract,\r\n                                },\r\n                                index\r\n                            ) => {\r\n                                if (itemList.length == index + 1) {\r\n                                    return (\r\n                                        <>\r\n                                            <Grid\r\n                                                item\r\n                                                xs={12}\r\n                                                sm={6}\r\n                                                md={4}\r\n                                                xl={3}\r\n                                                p={2}\r\n                                                key={index + _id}\r\n                                                ref={lastItemVisible}\r\n                                            >\r\n                                                <MarketplaceCard\r\n                                                    address={address}\r\n                                                    locations={{ lang, long }}\r\n                                                    id={_id}\r\n                                                    name={name}\r\n                                                    Image={capturesImage}\r\n                                                    user={user}\r\n                                                    filelink={filelink}\r\n                                                    file={file}\r\n                                                    productTotalPrice={productTotalPrice}\r\n                                                    checker={checker}\r\n                                                    userlikeviews={{ likesList, favoritesList }}\r\n                                                    howManyViews={howManyViews}\r\n                                                    paidStatusContract={paidStatusContract}\r\n                                                    failedNftmint={setNftmint}\r\n                                                />\r\n                                            </Grid>\r\n                                        </>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <>\r\n                                            <Grid\r\n                                                item\r\n                                                xs={12}\r\n                                                sm={6}\r\n                                                md={4}\r\n                                                xl={3}\r\n                                                p={2}\r\n                                                key={index + _id}\r\n                                            >\r\n                                                <MarketplaceCard\r\n                                                    address={address}\r\n                                                    locations={{ lang, long }}\r\n                                                    id={_id}\r\n                                                    name={name}\r\n                                                    Image={capturesImage}\r\n                                                    user={user}\r\n                                                    filelink={filelink}\r\n                                                    file={file}\r\n                                                    productTotalPrice={productTotalPrice}\r\n                                                    checker={checker}\r\n                                                    userlikeviews={{ likesList, favoritesList }}\r\n                                                    howManyViews={howManyViews}\r\n                                                    paidStatusContract={paidStatusContract}\r\n                                                    failedNftmint={setNftmint}\r\n                                                />\r\n                                            </Grid>\r\n                                        </>\r\n                                    );\r\n                                }\r\n                            }\r\n                        )\r\n                    ) : (\r\n                        <EmptyData text=\" Empty  NFTs ....\" />\r\n                    )}\r\n                </Grid>\r\n            </Box>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FollowList;","import * as React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Tabs from \"@mui/material/Tabs\";\r\nimport Tab from \"@mui/material/Tab\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Box from \"@mui/material/Box\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport AllProducts from \"./allproducts\";\r\nimport FavoriteList from \"./favoriteList\";\r\nimport FollowList from './followList'\r\nconst AntTab = styled((props) => <Tab disableRipple {...props} />)(\r\n  ({ theme }) => ({\r\n    textTransform: \"none\",\r\n    minWidth: 0,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      minWidth: 0,\r\n    },\r\n    paddingRight: theme.spacing(5),\r\n    color: theme.palette.mode === \"light\" ? \"gray\" : \"white\",\r\n    opacity: 0.5,\r\n    fontWeight: \"bold\",\r\n    \"&:hover\": {\r\n      color: theme.palette.mode === \"light\" ? \"gray\" : \"white\",\r\n      opacity: 1,\r\n    },\r\n    \"&.Mui-selected\": {\r\n      color: \"white\",\r\n      background: \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n      borderRadius: \"5px\",\r\n\r\n      opacity: 1,\r\n    },\r\n\r\n    \"&.Mui-focusVisible\": {\r\n      backgroundColor: \"#d1eaff\",\r\n    },\r\n  })\r\n);\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.number.isRequired,\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    \"aria-controls\": `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nexport default function ProfileTabs() {\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: \"100%\", mx: \"auto\" }}>\r\n      <Box sx={{ borderBottom: 1, borderColor: \"divider\" }}>\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          aria-label=\"basic tabs example\"\r\n          sx={{\r\n            \"& .MuiTabs-indicator\": {\r\n              display: \"none\",\r\n              mb: 1,\r\n            },\r\n          }}\r\n        >\r\n          <AntTab label=\"All Nfts\" {...a11yProps(0)} />\r\n          <AntTab label=\"Favourite\" {...a11yProps(1)} />\r\n          <AntTab label=\"Follow\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </Box>\r\n      <Box className=\"scroolbox\"\r\n                sx={{\r\n                  height:\"500px\",\r\n                  overflowY: \"scroll\",\r\n                  mt:2,\r\n                  py:{xs:1,md:1},\r\n                  px:{xs:1,md:2},\r\n                  boxShadow:2,\r\n                  borderRadius:'10px'\r\n                 \r\n                 \r\n                }}>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <AllProducts AllNfts={true} />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <FavoriteList />\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <FollowList />\r\n      </TabPanel>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n","import { Box } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport ProfileTabs from \"./profile/profileTabs\";\r\nconst User = () => {\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: \"100%\",\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n          backgroundColor: \"black\",\r\n          minHeight: \"100vh\",\r\n        }}\r\n      >\r\n        user\r\n        {/* <Box>\r\n          <Hidden mdDown>\r\n            <UserSiderbar />\r\n          </Hidden>\r\n        </Box> */}\r\n        {/* <Box\r\n          sx={{\r\n            width: \"85%\",\r\n            display: \"flex\",\r\n            justifyContent: \"flex-end\",\r\n            border: \"1px solid yellow\",\r\n            fontSize: \"70px\",\r\n          }}\r\n        >\r\n          Dashbord\r\n        </Box> */}\r\n        <ProfileTabs />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import cogoToast from \"cogo-toast\";\r\nconst useMakeToast = () => {\r\n  const makeToast = (content, type = \"\", hideAfter = 1, heading = \"\") => {\r\n    const options = {\r\n      position: \"top-right\",\r\n      heading,\r\n      hideAfter,\r\n      bar: { size: \"5px\" },\r\n    };\r\n    if (type === \"success\") cogoToast.success(content, options);\r\n    else if (type === \"error\") cogoToast.error(content, options);\r\n    else if (type === \"warn\") {\r\n      cogoToast.warn(content, options);\r\n    } else if (type === \"info\") {\r\n      cogoToast.info(content, options);\r\n    } else {\r\n      cogoToast.info(content, options);\r\n    }\r\n  };\r\n\r\n  return makeToast;\r\n};\r\n\r\nexport default useMakeToast;\r\n"],"names":["EmptyData","text","sx","theme","mx","mt","display","alignItems","justifyContent","width","backgroundColor","palette","mode","height","borderRadius","textAlign","fontSize","xs","md","fontWeight","props","py","marginTop","background","color","iconStyle","userlikeviews","howManyViews","like","likesList","length","view","favoritesList","Box","my","Stack","spacing","direction","style","ThumbUp","Typography","ml","Favorite","useMakeToast","useDispatch","useState","loading","userdetails","useSelector","state","ceilSlice","videoType","role","filter","locations","address","id","name","filelink","Image","file","productTotalPrice","user","paidStatusContract","result","failedNftmint","split","fileType","pop","Loading","p","boxShadow","maxWidth","position","minHeight","includes","overflow","src","URL","margin","controls","autoPlay","backgroundImage","bloctech","backgroundPosition","backgroundSize","gutterBottom","textOverflow","component","slice","px","zIndex","cursor","to","lang","long","opacity","padding","textDecoration","clipPath","fontFamily","PreviousButton","paginationsHandles","NextButton","menuItems","page","totalPages","m","mb","startIcon","disabled","onClick","map","items","index","NavLink","AllProducts","Nfts","AllNfts","faildNFT","favourite","follow","React","setPage","setLoading","userNfts","ceildetails","failsNfts","setNftmint","hasMore","setHasMore","itemList","setItemList","observer","useRef","callApi","values","allNftsOfUser","response","more","data","prev","setTimeout","useEffect","lastItemVisible","node","current","disconnect","IntersectionObserver","entries","isIntersecting","observe","container","_id","capturesImage","item","sm","xl","ref","checker","favObserver","favoriteNftOfUser","favItemVisible","Grid","MarketplaceCard","followObserver","followNftOfUser","console","log","AntTab","styled","Tab","disableRipple","textTransform","minWidth","breakpoints","up","TabPanel","children","value","other","hidden","a11yProps","ProfileTabs","setValue","borderBottom","borderColor","Tabs","onChange","event","newValue","label","className","overflowY","content","type","options","heading","hideAfter","bar","size","cogoToast"],"sourceRoot":""}