{"version":3,"file":"static/js/645.db74ce90.chunk.js","mappings":"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","sources":["Component/Auth/Register.jsx","Component/CustomButton/CustomBTN.jsx"],"sourcesContent":["import { Box, Stack, Typography, InputAdornment } from \"@mui/material\";\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport earth from \"../../images/earth.png\";\r\nimport bg from \"../../images/bg.png\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { registerUser } from \"../../Api/api\";\r\nimport CustomBTN from \"../CustomButton/CustomBTN\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport { WalletContextProvider } from \"../../ContextAPI/CreateContext\";\r\nconst validationSchema = yup.object({\r\n  username: yup\r\n    .string()\r\n    .min(2, \"Too Short!\")\r\n    .max(70, \"Too Long!\")\r\n    .required(\"Required\"),\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\n//..........register function...........\r\nconst Register = () => {\r\n  const [toggle, setToggle] = useState(false);\r\n  const { address } = useContext(WalletContextProvider);\r\n  const [walletaddress, setWalletaddress] = useState(\"\");\r\n\r\n  const navigate = useNavigate();\r\n  const [lat, setLat] = useState(null);\r\n  const [lng, setLng] = useState(null);\r\n  const getLocation = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(showPosition);\r\n    } else {\r\n      console.log(\"Error while geting  location ... \");\r\n    }\r\n  };\r\n  function showPosition(position) {\r\n    setLat(position.coords.latitude);\r\n    setLng(position.coords.longitude);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getLocation();\r\n  }, []);\r\n  useEffect(() => {\r\n    setWalletaddress(address);\r\n  }, [address]);\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n    validationSchema: validationSchema,\r\n\r\n    onSubmit: async (values) => {\r\n      try {\r\n        const { username, email, password } = values;\r\n        const obj = {\r\n          username,\r\n          email,\r\n          password,\r\n          wallet: walletaddress,\r\n          latLng: [lat, lng],\r\n        };\r\n\r\n        if (!address) {\r\n          toast.error(\"Please connect with Wallet\");\r\n          return false;\r\n        }\r\n\r\n        const data = await registerUser(obj);\r\n        if (data?.status === \"ok\") {\r\n          toast.success(data?.message);\r\n          setTimeout(() => {\r\n            navigate(\"/login\");\r\n          }, 2000);\r\n        }\r\n        data?.status === \"error\" && toast.error(data?.message);\r\n      } catch (err) {\r\n        console.log(\"Error in user registration\", err);\r\n      }\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          backgroundImage: `url(${earth})`,\r\n          minHeight: \"100vh\",\r\n          width: \"100%\",\r\n          position: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          display: \"flex\",\r\n          alignItems: \"start\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            width: { xs: \"90%\", sm: \"70%\", md: \"35%\", lg: \"28%\" },\r\n            marginX: \"auto\",\r\n            p: 3,\r\n            backgroundImage: `url(${bg})`,\r\n            backgroundSize: \"100% 100%\",\r\n            mt: 14,\r\n            color: \"white\",\r\n          }}\r\n        >\r\n          {/* <Typography variant=\"h5\" textAlign=\"center\" fontWeight=\"bold\">\r\n            Welcome to the NFt Land !\r\n          </Typography> */}\r\n          <Typography\r\n            variant=\"h6\"\r\n            textAlign=\"center\"\r\n            fontWeight=\"bold\"\r\n            sx={{ marginY: \"5px\" }}\r\n          >\r\n            REGISTER\r\n          </Typography>\r\n          <Typography>\r\n            Please connect to wallet for Register. because you cannot fill the\r\n            text fields.\r\n          </Typography>\r\n          <Stack spacing={1}>\r\n            <form>\r\n              <Box>\r\n                <Typography variant=\"body2\">USERNAME</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"text\"\r\n                  placeholder=\"username\"\r\n                  name=\"username\"\r\n                  autoComplete=\"off\"\r\n                  value={formik.values.username}\r\n                  onChange={formik.handleChange}\r\n                  error={\r\n                    formik.touched.username && Boolean(formik.errors.username)\r\n                  }\r\n                  helperText={formik.touched.username && formik.errors.username}\r\n                  sx={(theme) => ({\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"light\" ? \"#ffffff\" : \"#3A3A3A\",\r\n                    borderRadius: \"8px\",\r\n                    border: \"none\",\r\n                    input: {\r\n                      color:\r\n                        theme.palette.mode === \"light\" ? \"#00000\" : \"#ffffff\",\r\n                    },\r\n                  })}\r\n                />\r\n              </Box>\r\n              <Box my={1.5}>\r\n                <Typography variant=\"body2\">Wallet</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"text\"\r\n                  placeholder=\"Wallet Address\"\r\n                  name=\"wallet\"\r\n                  autoComplete=\"off\"\r\n                  value={address}\r\n                  sx={(theme) => ({\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"light\" ? \"#ffffff\" : \"#3A3A3A\",\r\n                    borderRadius: \"8px\",\r\n                    border: \"none\",\r\n                    input: {\r\n                      color:\r\n                        theme.palette.mode === \"light\" ? \"#00000\" : \"#ffffff\",\r\n                    },\r\n                  })}\r\n                  readOnly\r\n                />\r\n              </Box>\r\n              <Box my={1.5}>\r\n                <Typography variant=\"body2\">EMAIL ADDRESS</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"off\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                  sx={(theme) => ({\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"light\" ? \"#ffffff\" : \"#3A3A3A\",\r\n                    borderRadius: \"8px\",\r\n                    border: \"none\",\r\n                    input: {\r\n                      color:\r\n                        theme.palette.mode === \"light\" ? \"#00000\" : \"#ffffff\",\r\n                    },\r\n                  })}\r\n                />\r\n              </Box>\r\n              <Box my={1.5}>\r\n                <Typography variant=\"body2\">PASSWORD</Typography>\r\n\r\n                <TextField\r\n                  fullWidth\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type={toggle ? \"text\" : \"password\"}\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n                  error={\r\n                    formik.touched.password && Boolean(formik.errors.password)\r\n                  }\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                  sx={(theme) => ({\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"light\" ? \"#ffffff\" : \"#3A3A3A\",\r\n                    borderRadius: \"8px\",\r\n                    border: \"none\",\r\n                    input: {\r\n                      color:\r\n                        theme.palette.mode === \"light\" ? \"#00000\" : \"#ffffff\",\r\n                    },\r\n                  })}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment\r\n                        sx={{ cursor: \"pointer\" }}\r\n                        position=\"end\"\r\n                        onClick={() => {\r\n                          setToggle(!toggle);\r\n                        }}\r\n                      >\r\n                        {toggle ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                />\r\n              </Box>\r\n              <Box\r\n                onClick={formik.handleSubmit}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                <CustomBTN text=\"Register\" />\r\n              </Box>\r\n            </form>\r\n            <Box\r\n              component={Link}\r\n              to=\"/login\"\r\n              sx={{\r\n                display: \"flex\",\r\n                color: \"white\",\r\n                fontSize: \"20px\",\r\n                justifyContent: \"center\",\r\n                mt: 2,\r\n              }}\r\n            >\r\n              Login Instead?\r\n            </Box>\r\n          </Stack>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nfunction CustomBTN(props) {\r\n  return (\r\n    <Button\r\n      sx={{\r\n        py: 1,\r\n        fontSize: { xs: \"12px\", md: \"15px\" },\r\n        width: \"100%\",\r\n        marginTop: \"30px\",\r\n        borderRadius: \"10px\",\r\n        background:\r\n            \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n        color: \"white\",\r\n        fontWeight: 700,\r\n      }}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default CustomBTN;\r\n"],"names":["validationSchema","yup","username","min","max","required","email","password","useState","toggle","setToggle","address","useContext","WalletContextProvider","walletaddress","setWalletaddress","navigate","useNavigate","lat","setLat","lng","setLng","showPosition","position","coords","latitude","longitude","useEffect","navigator","geolocation","getCurrentPosition","console","log","formik","useFormik","initialValues","onSubmit","values","obj","wallet","latLng","toast","registerUser","data","status","message","setTimeout","sx","backgroundImage","earth","minHeight","width","backgroundRepeat","backgroundSize","display","alignItems","xs","sm","md","lg","marginX","p","bg","mt","color","variant","textAlign","fontWeight","marginY","spacing","fullWidth","type","placeholder","name","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","helperText","theme","backgroundColor","palette","mode","borderRadius","border","input","my","readOnly","InputProps","endAdornment","cursor","onClick","handleSubmit","justifyContent","text","component","Link","to","fontSize","props","py","marginTop","background"],"sourceRoot":""}