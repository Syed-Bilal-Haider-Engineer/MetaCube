{"version":3,"file":"static/js/947.7de3f76d.chunk.js","mappings":"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","sources":["Component/Auth/Login.jsx","Component/CustomButton/CustomBTN.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { Box, Typography, InputAdornment } from \"@mui/material\";\r\nimport earth from \"../../images/earth.png\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { loginUser } from \"../../Api/api\";\r\nimport CustomBTN from \"../CustomButton/CustomBTN\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Adduser } from \"../../Redux/Reducer\";\r\nimport VisibilityIcon from \"@mui/icons-material/Visibility\";\r\nimport VisibilityOffIcon from \"@mui/icons-material/VisibilityOff\";\r\nimport { WalletContextProvider } from \"../../ContextAPI/CreateContext\";\r\nimport bg from \"../../images/bg.png\";\r\nimport { useState } from \"react\";\r\nconst validationSchema = yup.object({\r\n  email: yup\r\n    .string(\"Enter your email\")\r\n    .email(\"Enter a valid email\")\r\n    .required(\"Email is required\"),\r\n  password: yup\r\n    .string(\"Enter your password\")\r\n    .min(8, \"Password should be of minimum 8 characters length\")\r\n    .required(\"Password is required\"),\r\n});\r\n\r\nconst Login = () => {\r\n  const dispatch = useDispatch();\r\n  const { address } = useContext(WalletContextProvider);\r\n  const navigate = useNavigate();\r\n  const [toggle, setToggle] = useState(false);\r\n  const loginHandle = async (values) => {\r\n    try {\r\n      const data = await loginUser(values);\r\n      if (data?.status === \"ok\") {\r\n        dispatch(Adduser(data?.data));\r\n        toast.success(data?.message);\r\n        localStorage.setItem(\"maptoken\", data.token);\r\n        setTimeout(() => {\r\n          navigate(\"/\");\r\n        }, 2000);\r\n      }\r\n      data?.status === \"error\" && toast.error(data.message);\r\n    } catch (err) {\r\n      console.log(\"Error in login User\", err);\r\n    }\r\n  };\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: \"\",\r\n      password: \"\",\r\n    },\r\n\r\n    validationSchema: validationSchema,\r\n    onSubmit: async (values) => {\r\n      loginHandle(values);\r\n    },\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          backgroundImage: `url(${earth})`,\r\n          height: \"100vh\",\r\n          width: \"100%\",\r\n          position: \"center\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          display: \"flex\",\r\n          alignItems: \"start\",\r\n        }}\r\n      >\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            flexDirection: { xs: \"column\", sm: \"column\", md: \"row\" },\r\n            width: { xs: \"90%\", md: \"80%\", lg: \"60%\" },\r\n            marginX: \"auto\",\r\n            justifyContent: \"space-between\",\r\n            alignItems: \"center\",\r\n          }}\r\n        >\r\n          <Box\r\n            sx={{\r\n              width: { xs: \"90%\", sm: \"90%\", md: \"50%\" },\r\n              marginX: \"auto\",\r\n              backgroundImage: `url(${bg})`,\r\n              backgroundSize: \"100% 100%\",\r\n              mt: 15,\r\n              color: \"white\",\r\n              padding: { xs: \"15px\", sm: \"10px\", md: \"20px\", lg: \"30px\" },\r\n            }}\r\n          >\r\n            <Typography variant=\"h5\" textAlign=\"center\" fontWeight=\"bold\">\r\n              Welcome to the NFT Land !\r\n            </Typography>\r\n            <Typography\r\n              variant=\"h4\"\r\n              textAlign=\"center\"\r\n              fontWeight=\"bold\"\r\n              sx={{ marginY: \"20px\" }}\r\n            >\r\n              LOGIN\r\n            </Typography>\r\n            <form>\r\n              <Box>\r\n                <Typography variant=\"body2\">EMAIL ADDRESS</Typography>\r\n                <TextField\r\n                  fullWidth\r\n                  type=\"email\"\r\n                  placeholder=\"Email\"\r\n                  name=\"email\"\r\n                  autoComplete=\"off\"\r\n                  value={formik.values.email}\r\n                  onChange={formik.handleChange}\r\n                  error={formik.touched.email && Boolean(formik.errors.email)}\r\n                  helperText={formik.touched.email && formik.errors.email}\r\n                  sx={(theme) => ({\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"light\" ? \"#F8F5F5\" : \"#3A3A3A\",\r\n                    borderRadius: \"8px\",\r\n                    border: \"none\",\r\n                    input: {\r\n                      color:\r\n                        theme.palette.mode === \"light\" ? \"#00000\" : \"#ffffff\",\r\n                    },\r\n                  })}\r\n                />\r\n              </Box>\r\n              <Box my={3}>\r\n                <Typography variant=\"body2\">PASSWORD</Typography>\r\n\r\n                <TextField\r\n                  fullWidth\r\n                  placeholder=\"Password\"\r\n                  name=\"password\"\r\n                  type={toggle ? \"text\" : \"password\"}\r\n                  value={formik.values.password}\r\n                  onChange={formik.handleChange}\r\n                  InputProps={{\r\n                    endAdornment: (\r\n                      <InputAdornment\r\n                        sx={{\r\n                          cursor: \"pointer\",\r\n                          backgroundColor: \"background.secondary\",\r\n                        }}\r\n                        position=\"end\"\r\n                        onClick={() => {\r\n                          setToggle(!toggle);\r\n                        }}\r\n                      >\r\n                        {toggle ? <VisibilityOffIcon /> : <VisibilityIcon />}\r\n                      </InputAdornment>\r\n                    ),\r\n                  }}\r\n                  error={\r\n                    formik.touched.password && Boolean(formik.errors.password)\r\n                  }\r\n                  helperText={formik.touched.password && formik.errors.password}\r\n                  sx={(theme) => ({\r\n                    backgroundColor:\r\n                      theme.palette.mode === \"light\" ? \"#F8F5F5\" : \"#3A3A3A\",\r\n                    borderRadius: \"8px\",\r\n                    border: \"none\",\r\n                    input: {\r\n                      color:\r\n                        theme.palette.mode === \"light\" ? \"#00000\" : \"#ffffff\",\r\n                    },\r\n                  })}\r\n                />\r\n              </Box>\r\n              <Box\r\n                onClick={formik.handleSubmit}\r\n                sx={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  mt: 2,\r\n                }}\r\n              >\r\n                <CustomBTN text=\"Login\" />\r\n              </Box>\r\n            </form>\r\n\r\n            <Box\r\n              component={Link}\r\n              to=\"/register\"\r\n              sx={{\r\n                display: \"flex\",\r\n                color: \"white\",\r\n                fontSize: \"20px\",\r\n                justifyContent: \"center\",\r\n                mt: 2,\r\n              }}\r\n            >\r\n              Register Instead?\r\n            </Box>\r\n          </Box>\r\n          <Box\r\n            onClick={() => {\r\n              !address\r\n                ? toast.error(\"please connect with wallet !\")\r\n                : loginHandle({ address });\r\n            }}\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              mt: 2,\r\n            }}\r\n          >\r\n            <CustomBTN text=\"Login with Wallet\" />\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nfunction CustomBTN(props) {\r\n  return (\r\n    <Button\r\n      sx={{\r\n        py: 1,\r\n        fontSize: { xs: \"12px\", md: \"15px\" },\r\n        width: \"100%\",\r\n        marginTop: \"30px\",\r\n        borderRadius: \"10px\",\r\n        background:\r\n            \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n        color: \"white\",\r\n        fontWeight: 700,\r\n      }}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default CustomBTN;\r\n"],"names":["validationSchema","yup","email","required","password","min","dispatch","useDispatch","address","useContext","WalletContextProvider","navigate","useNavigate","useState","toggle","setToggle","loginHandle","values","loginUser","data","status","Adduser","toast","message","localStorage","setItem","token","setTimeout","console","log","formik","useFormik","initialValues","onSubmit","sx","backgroundImage","earth","height","width","position","backgroundRepeat","backgroundSize","display","alignItems","flexDirection","xs","sm","md","lg","marginX","justifyContent","bg","mt","color","padding","variant","textAlign","fontWeight","marginY","fullWidth","type","placeholder","name","autoComplete","value","onChange","handleChange","error","touched","Boolean","errors","helperText","theme","backgroundColor","palette","mode","borderRadius","border","input","my","InputProps","endAdornment","cursor","onClick","handleSubmit","text","component","Link","to","fontSize","props","py","marginTop","background"],"sourceRoot":""}