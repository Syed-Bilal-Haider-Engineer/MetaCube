{"version":3,"file":"static/js/685.48eeb0cd.chunk.js","mappings":"uRAmEA,UA5DA,WACE,IAAMA,GAAYC,EAAAA,EAAAA,KACZC,GAASC,EAAAA,EAAAA,MACf,EAA8BC,EAAAA,SAAe,IAAG,eAAzCC,EAAO,KAAEC,EAAU,KAC1B,EAAwBF,EAAAA,SAAe,IAAG,eAAnCG,EAAI,KAAEC,EAAO,KAiBpB,OAhBAJ,EAAAA,WAAgB,WACd,IAAMK,EAAU,yCAAG,oHAEQC,EAAAA,EAAAA,KAAW,GAAD,OAAIC,EAAAA,EAAG,eAAe,CACrDC,GAAU,OAANV,QAAM,IAANA,OAAM,EAANA,EAAQU,KACX,KAAD,WACe,QAAb,QAHIC,EAAI,EAAJA,YAGJ,IAAJA,OAAI,EAAJA,EAAMC,SAAmBR,EAAe,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMR,SACzB,QAAb,OAAJQ,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAmBN,EAAY,OAAJK,QAAI,IAAJA,OAAI,EAAJA,EAAMN,MACtB,WAAb,OAAJM,QAAI,IAAJA,OAAI,EAAJA,EAAMC,SAAsBR,EAAe,OAAJO,QAAI,IAAJA,OAAI,EAAJA,EAAMR,SAAS,kDAEtDL,EAAU,GAAD,aAAa,QAAS,EAAG,UAAU,0DAE/C,kBAXe,mCAYhBS,GACF,GAAG,CAAO,OAANP,QAAM,IAANA,OAAM,EAANA,EAAQU,MAGV,UAAC,IAAK,CACJG,GAAI,CACFC,GAAI,EACJC,GAAI,EACJC,OAAQ,QACRC,gBAAiB,UACjBC,UAAW,SACXC,MAAO,QACPC,QAAS,OACTC,eAAgB,aAChBC,WAAY,SACZC,cAAe,UACf,WAEF,SAAC,IAAG,CAACV,GAAI,CAAEC,GAAI,GAAI,UACjB,SAAC,IAAU,CAACD,GAAI,CAAEW,SAAU,UAAW,SAAC,wCAI1C,UAAC,IAAU,WAAC,8BAA4BnB,EAAK,QAC7C,UAAC,IAAU,WAAC,aAAWF,MACvB,SAAC,IAAG,CACFU,GAAI,CACFY,MAAO,CAAEC,GAAI,MAAOC,GAAI,QACxB,SAEDtB,GACC,SAAC,KAAI,CAACuB,GAAG,IAAIC,MAAO,CAAEC,eAAgB,OAAQX,MAAO,SAAU,UAC7D,SAAC,IAAS,CAACY,KAAK,oBAGlB,SAAC,IAAS,CAACA,KAAK,mCAK1B,C,2DC3CA,IApBA,SAAmBC,GACjB,OACE,SAAC,IAAM,CACLnB,GAAI,CACFC,GAAI,EACJU,SAAU,CAAEG,GAAI,OAAQD,GAAI,QAC5BD,MAAO,OACPQ,UAAW,OACXC,aAAc,OACdC,WACI,0DACJhB,MAAO,QACPiB,WAAY,KACZ,SAEDJ,EAAMD,MAGb,C,uCCGA,IAtBqB,WAmBnB,OAlBkB,SAACM,GAAqD,IAA5CC,EAAI,uDAAG,GAC3BC,EAAU,CACdC,SAAU,YACVC,QAHyD,uDAAG,GAI5DC,UAJ4C,uDAAG,EAK/CC,IAAK,CAAEC,KAAM,QAEF,YAATN,EAAoBO,EAAAA,EAAAA,QAAkBR,EAASE,GACjC,UAATD,EAAkBO,EAAAA,EAAAA,MAAgBR,EAASE,GAClC,SAATD,EACPO,EAAAA,EAAAA,KAAeR,EAASE,GAExBM,EAAAA,EAAAA,KAAeR,EAASE,EAI5B,CAGF,C","sources":["Component/Auth/Emailverify.jsx","Component/CustomButton/CustomBTN.jsx","hooks/makeToast.js"],"sourcesContent":["import React from \"react\";\r\nimport { Box, Stack, Typography } from \"@mui/material\";\r\nimport CustomBTN from \"../CustomButton/CustomBTN\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport useMakeToast from \"../../hooks/makeToast\";\r\nimport axios from \"axios\";\r\nimport { URL } from \"../../URL\";\r\nfunction Emailverify() {\r\n  const makeToast = useMakeToast();\r\n  const params = useParams();\r\n  const [message, setmessage] = React.useState(\"\");\r\n  const [mail, setmail] = React.useState(\"\");\r\n  React.useEffect(() => {\r\n    const verifymail = async () => {\r\n      try {\r\n        const { data } = await axios.post(`${URL}/mailverify`, {\r\n          id: params?.id,\r\n        });\r\n        data?.status === \"ok\" && setmessage(data?.message);\r\n        data?.status === \"ok\" && setmail(data?.mail);\r\n        data?.status === \"error\" && setmessage(data?.message);\r\n      } catch (error) {\r\n        makeToast(`${error}`, \"error\", 3, \"Failed\");\r\n      }\r\n    };\r\n    verifymail();\r\n  }, [params?.id]);\r\n\r\n  return (\r\n    <Stack\r\n      sx={{\r\n        py: 4,\r\n        px: 1,\r\n        height: \"100vh\",\r\n        backgroundColor: \"#1428a2\",\r\n        textAlign: \"center\",\r\n        color: \"white\",\r\n        display: \"flex\",\r\n        justifyContent: \"flex-start\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n      }}\r\n    >\r\n      <Box sx={{ py: 4 }}>\r\n        <Typography sx={{ fontSize: \"2.5rem\" }}>\r\n          Thank you for your registration!\r\n        </Typography>\r\n      </Box>\r\n      <Typography>We've sent you an email to {mail}!</Typography>\r\n      <Typography>Your mail {message}</Typography>\r\n      <Box\r\n        sx={{\r\n          width: { md: \"20%\", xs: \"60%\" },\r\n        }}\r\n      >\r\n        {mail ? (\r\n          <Link to=\"/\" style={{ textDecoration: \"none\", color: \"white\" }}>\r\n            <CustomBTN text=\"Back to Home\" />\r\n          </Link>\r\n        ) : (\r\n          <CustomBTN text=\"Resend email verifications\" />\r\n        )}\r\n      </Box>\r\n    </Stack>\r\n  );\r\n}\r\n\r\nexport default Emailverify;\r\n","import React from \"react\";\r\nimport { Button } from \"@mui/material\";\r\nfunction CustomBTN(props) {\r\n  return (\r\n    <Button\r\n      sx={{\r\n        py: 1,\r\n        fontSize: { xs: \"12px\", md: \"15px\" },\r\n        width: \"100%\",\r\n        marginTop: \"10px\",\r\n        borderRadius: \"10px\",\r\n        background:\r\n            \"linear-gradient(90.1deg, #4F98D0 0.11%, #34D9B1 95.94%)\",\r\n        color: \"white\",\r\n        fontWeight: 700,\r\n      }}\r\n    >\r\n      {props.text}\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default CustomBTN;\r\n","import cogoToast from \"cogo-toast\";\r\nconst useMakeToast = () => {\r\n  const makeToast = (content, type = \"\", hideAfter = 1, heading = \"\") => {\r\n    const options = {\r\n      position: \"top-right\",\r\n      heading,\r\n      hideAfter,\r\n      bar: { size: \"5px\" },\r\n    };\r\n    if (type === \"success\") cogoToast.success(content, options);\r\n    else if (type === \"error\") cogoToast.error(content, options);\r\n    else if (type === \"warn\") {\r\n      cogoToast.warn(content, options);\r\n    } else if (type === \"info\") {\r\n      cogoToast.info(content, options);\r\n    } else {\r\n      cogoToast.info(content, options);\r\n    }\r\n  };\r\n\r\n  return makeToast;\r\n};\r\n\r\nexport default useMakeToast;\r\n"],"names":["makeToast","useMakeToast","params","useParams","React","message","setmessage","mail","setmail","verifymail","axios","URL","id","data","status","sx","py","px","height","backgroundColor","textAlign","color","display","justifyContent","alignItems","flexDirection","fontSize","width","md","xs","to","style","textDecoration","text","props","marginTop","borderRadius","background","fontWeight","content","type","options","position","heading","hideAfter","bar","size","cogoToast"],"sourceRoot":""}